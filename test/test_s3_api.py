# coding: utf-8

"""
    @weka-api

    <div>The Weka system supports a RESTful API. This is useful when automating the interaction with the Weka system and when integrating it into your workflows or monitoring systems. The API is accessible at port 14000, via the /api/v2 URL, you can explore it via /api/v2/docs when accessing from the cluster (e.g. https://weka01:14000/api/v2/docs).<div style=\"margin-top: 15px;\">Note: Weka uses 64bit numbers. Please take special care when interacting with the API with different program languages (In JS for example you can use \"json-bigint\")</div></div>  # noqa: E501

    OpenAPI spec version: 3.14
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import wekarestapi
from wekarestapi.api.s3_api import S3Api  # noqa: E501
from wekarestapi.rest import ApiException


class TestS3Api(unittest.TestCase):
    """S3Api unit test stubs"""

    def setUp(self):
        self.api = S3Api()  # noqa: E501

    def tearDown(self):
        pass

    def test_attach_s3_policy(self):
        """Test case for attach_s3_policy

        Attach an S3 IAM policy to a user  # noqa: E501
        """
        pass

    def test_create_s3_bucket(self):
        """Test case for create_s3_bucket

        Create an S3 bucket  # noqa: E501
        """
        pass

    def test_create_s3_cluster(self):
        """Test case for create_s3_cluster

        Create S3 cluster  # noqa: E501
        """
        pass

    def test_create_s3_policy(self):
        """Test case for create_s3_policy

        Create an S3 IAM policy  # noqa: E501
        """
        pass

    def test_delete_s3_cluster(self):
        """Test case for delete_s3_cluster

        Delete S3 cluster  # noqa: E501
        """
        pass

    def test_delete_s3_policy(self):
        """Test case for delete_s3_policy

        Delete an S3 IAM policy  # noqa: E501
        """
        pass

    def test_destroy_s3_bucket(self):
        """Test case for destroy_s3_bucket

        Destroy an S3 bucket  # noqa: E501
        """
        pass

    def test_detach_s3_policy(self):
        """Test case for detach_s3_policy

        Detach a user's policy  # noqa: E501
        """
        pass

    def test_get_s3_bucket_disk_usage(self):
        """Test case for get_s3_bucket_disk_usage

        Get the disk usage of an S3 bucket  # noqa: E501
        """
        pass

    def test_get_s3_bucket_policy(self):
        """Test case for get_s3_bucket_policy

        Get the S3 bucket policy  # noqa: E501
        """
        pass

    def test_get_s3_bucket_policy_json(self):
        """Test case for get_s3_bucket_policy_json

        Get the S3 bucket policy json  # noqa: E501
        """
        pass

    def test_get_s3_buckets(self):
        """Test case for get_s3_buckets

        Get S3 buckets list  # noqa: E501
        """
        pass

    def test_get_s3_cluster(self):
        """Test case for get_s3_cluster

        Get S3 cluster info  # noqa: E501
        """
        pass

    def test_get_s3_policies(self):
        """Test case for get_s3_policies

        Get S3 IAM policies list  # noqa: E501
        """
        pass

    def test_get_s3_policy(self):
        """Test case for get_s3_policy

        Get the details of an S3 IAM policy  # noqa: E501
        """
        pass

    def test_gets3_containers_are_ready(self):
        """Test case for gets3_containers_are_ready

        Get S3 Hosts status  # noqa: E501
        """
        pass

    def test_s3_create_lifecycle_rule(self):
        """Test case for s3_create_lifecycle_rule

        Create a new bucket lifecycle rule  # noqa: E501
        """
        pass

    def test_s3_delete_all_lifecycle_rules(self):
        """Test case for s3_delete_all_lifecycle_rules

        Delete all lifecycle rules of a specific bucket  # noqa: E501
        """
        pass

    def test_s3_delete_lifecycle_rule(self):
        """Test case for s3_delete_lifecycle_rule

        Delete a bucket lifecycle rule  # noqa: E501
        """
        pass

    def test_s3_list_all_lifecycle_rules(self):
        """Test case for s3_list_all_lifecycle_rules

        List all lifecycle rules of a specific bucket  # noqa: E501
        """
        pass

    def test_s3_sts_create(self):
        """Test case for s3_sts_create

        Create an s3 sts token with an assumend role  # noqa: E501
        """
        pass

    def test_set_s3_bucket_policy(self):
        """Test case for set_s3_bucket_policy

        Set S3 bucket policy  # noqa: E501
        """
        pass

    def test_set_s3_bucket_policy_json(self):
        """Test case for set_s3_bucket_policy_json

        Set S3 bucket policy json  # noqa: E501
        """
        pass

    def test_set_s3_bucket_quota(self):
        """Test case for set_s3_bucket_quota

        Set S3 bucket quota  # noqa: E501
        """
        pass

    def test_unset_s3_bucket_quota(self):
        """Test case for unset_s3_bucket_quota

        Unset S3 bucket quota  # noqa: E501
        """
        pass

    def test_update_s3_cluster(self):
        """Test case for update_s3_cluster

        Update S3 cluster  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
