# coding: utf-8

"""
    @weka-api

    <div>The Weka system supports a RESTful API. This is useful when automating the interaction with the Weka system and when integrating it into your workflows or monitoring systems. The API is accessible at port 14000, via the /api/v2 URL, you can explore it via /api/v2/docs when accessing from the cluster (e.g. https://weka01:14000/api/v2/docs).<div style=\"margin-top: 15px;\">Note: Weka uses 64bit numbers. Please take special care when interacting with the API with different program languages (In JS for example you can use \"json-bigint\")</div></div>  # noqa: E501

    OpenAPI spec version: 3.14
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse2008DataBucketsInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'average_fill_level_ppm_min_since_last_event': 'float',
        'thin_provision_state': 'InlineResponse2008DataBucketsInfoThinProvisionState',
        'average_fill_level_ppm': 'float',
        'shrunk_at_generation': 'str',
        'placement_allocation_threshold_ppm': 'float',
        'max_prefetch_rp_cs': 'float'
    }

    attribute_map = {
        'average_fill_level_ppm_min_since_last_event': 'averageFillLevelPPMMinSinceLastEvent',
        'thin_provision_state': 'thinProvisionState',
        'average_fill_level_ppm': 'averageFillLevelPPM',
        'shrunk_at_generation': 'shrunkAtGeneration',
        'placement_allocation_threshold_ppm': 'placementAllocationThresholdPPM',
        'max_prefetch_rp_cs': 'maxPrefetchRPCs'
    }

    def __init__(self, average_fill_level_ppm_min_since_last_event=None, thin_provision_state=None, average_fill_level_ppm=None, shrunk_at_generation=None, placement_allocation_threshold_ppm=None, max_prefetch_rp_cs=None):  # noqa: E501
        """InlineResponse2008DataBucketsInfo - a model defined in Swagger"""  # noqa: E501
        self._average_fill_level_ppm_min_since_last_event = None
        self._thin_provision_state = None
        self._average_fill_level_ppm = None
        self._shrunk_at_generation = None
        self._placement_allocation_threshold_ppm = None
        self._max_prefetch_rp_cs = None
        self.discriminator = None
        if average_fill_level_ppm_min_since_last_event is not None:
            self.average_fill_level_ppm_min_since_last_event = average_fill_level_ppm_min_since_last_event
        if thin_provision_state is not None:
            self.thin_provision_state = thin_provision_state
        if average_fill_level_ppm is not None:
            self.average_fill_level_ppm = average_fill_level_ppm
        if shrunk_at_generation is not None:
            self.shrunk_at_generation = shrunk_at_generation
        if placement_allocation_threshold_ppm is not None:
            self.placement_allocation_threshold_ppm = placement_allocation_threshold_ppm
        if max_prefetch_rp_cs is not None:
            self.max_prefetch_rp_cs = max_prefetch_rp_cs

    @property
    def average_fill_level_ppm_min_since_last_event(self):
        """Gets the average_fill_level_ppm_min_since_last_event of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The average_fill_level_ppm_min_since_last_event of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: float
        """
        return self._average_fill_level_ppm_min_since_last_event

    @average_fill_level_ppm_min_since_last_event.setter
    def average_fill_level_ppm_min_since_last_event(self, average_fill_level_ppm_min_since_last_event):
        """Sets the average_fill_level_ppm_min_since_last_event of this InlineResponse2008DataBucketsInfo.


        :param average_fill_level_ppm_min_since_last_event: The average_fill_level_ppm_min_since_last_event of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: float
        """

        self._average_fill_level_ppm_min_since_last_event = average_fill_level_ppm_min_since_last_event

    @property
    def thin_provision_state(self):
        """Gets the thin_provision_state of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The thin_provision_state of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: InlineResponse2008DataBucketsInfoThinProvisionState
        """
        return self._thin_provision_state

    @thin_provision_state.setter
    def thin_provision_state(self, thin_provision_state):
        """Sets the thin_provision_state of this InlineResponse2008DataBucketsInfo.


        :param thin_provision_state: The thin_provision_state of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: InlineResponse2008DataBucketsInfoThinProvisionState
        """

        self._thin_provision_state = thin_provision_state

    @property
    def average_fill_level_ppm(self):
        """Gets the average_fill_level_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The average_fill_level_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: float
        """
        return self._average_fill_level_ppm

    @average_fill_level_ppm.setter
    def average_fill_level_ppm(self, average_fill_level_ppm):
        """Sets the average_fill_level_ppm of this InlineResponse2008DataBucketsInfo.


        :param average_fill_level_ppm: The average_fill_level_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: float
        """

        self._average_fill_level_ppm = average_fill_level_ppm

    @property
    def shrunk_at_generation(self):
        """Gets the shrunk_at_generation of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The shrunk_at_generation of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: str
        """
        return self._shrunk_at_generation

    @shrunk_at_generation.setter
    def shrunk_at_generation(self, shrunk_at_generation):
        """Sets the shrunk_at_generation of this InlineResponse2008DataBucketsInfo.


        :param shrunk_at_generation: The shrunk_at_generation of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: str
        """

        self._shrunk_at_generation = shrunk_at_generation

    @property
    def placement_allocation_threshold_ppm(self):
        """Gets the placement_allocation_threshold_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The placement_allocation_threshold_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: float
        """
        return self._placement_allocation_threshold_ppm

    @placement_allocation_threshold_ppm.setter
    def placement_allocation_threshold_ppm(self, placement_allocation_threshold_ppm):
        """Sets the placement_allocation_threshold_ppm of this InlineResponse2008DataBucketsInfo.


        :param placement_allocation_threshold_ppm: The placement_allocation_threshold_ppm of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: float
        """

        self._placement_allocation_threshold_ppm = placement_allocation_threshold_ppm

    @property
    def max_prefetch_rp_cs(self):
        """Gets the max_prefetch_rp_cs of this InlineResponse2008DataBucketsInfo.  # noqa: E501


        :return: The max_prefetch_rp_cs of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :rtype: float
        """
        return self._max_prefetch_rp_cs

    @max_prefetch_rp_cs.setter
    def max_prefetch_rp_cs(self, max_prefetch_rp_cs):
        """Sets the max_prefetch_rp_cs of this InlineResponse2008DataBucketsInfo.


        :param max_prefetch_rp_cs: The max_prefetch_rp_cs of this InlineResponse2008DataBucketsInfo.  # noqa: E501
        :type: float
        """

        self._max_prefetch_rp_cs = max_prefetch_rp_cs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse2008DataBucketsInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse2008DataBucketsInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
